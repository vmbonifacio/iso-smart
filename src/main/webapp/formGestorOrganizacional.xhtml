<ui:composition xmlns="http://www.w3.org/1999/xhtml"
                xmlns:h="http://xmlns.jcp.org/jsf/html"
                xmlns:f="http://xmlns.jcp.org/jsf/core"
                xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
                xmlns:p="http://primefaces.org/ui"
                template="/WEB-INF/template.xhtml">

    <ui:define name="head">
        <style>
            /* Estilos del organigrama */
            .organigram-wrapper {
                display: flex;
                flex-direction: row-reverse;
            }

            /* Estilos de la barra lateral */
            .organigram-sidebar {
                width: 14%;
                background-color: #f2f2f2;
                padding: 0;
                box-sizing: border-box;
                color: black;
                display: flex;
                flex-direction: column;
                align-items: center;
                border-radius: 11px;
            }

            .organigram-sidebar .sidebar-item {
                margin-bottom: 5px;
                margin-top: 5px;
                cursor: grabbing;
            }

            /* Estilos del contenedor del organigrama */
            .organigram-content {
                flex: 1;
                padding: 10px;
                box-sizing: border-box;
                position: relative;
                display: flex;
                flex-direction: column;
                align-items: center; /* Centrar los nodos horizontalmente */
            }

            /* Estilos generales del nodo */
            .ui-organigram-node {
                position: relative;
                padding: 10px;
                cursor: move;
                margin: 10px;
                width: 150px; /* Ancho fijo para los nodos */
                text-align: center; /* Centrar el texto horizontalmente */
            }

            /* Estilos del nodo "Gerencia General" */
            .gerencia-general-node {
                background-color: #FFCD29;
                width: 120px;
                border-radius: 10px;
            }

            /* Estilos del nodo "Marketing" */
            .marketing-node {
                background-color: #9747FF;
                height: 60px;
                width: 120px;
                border-radius: 10px;
                padding-top: 17px;
            }

            /* Estilos del nodo "Contabilidad" */
            .contabilidad-node {
                background-color: #14AE5C;
                height: 60px;
                width: 120px;
                border-radius: 10px;
                padding-top: 17px;
            }

            /* Estilos del nodo "Administración" */
            .administracion-node {
                background-color: #006EBE;
                height: 60px;
                width: 120px;
                border-radius: 10px;
                display: inline-flex;
                align-items: center;
                justify-content: center;
            }

            /* Estilos del nodo "Recursos" */
            .recursos-node {
                background-color: #FF5733;
                height: 60px;
                width: 120px;
                border-radius: 10px;
                padding-top: 17px;
            }

            /* Estilos de la conexión vertical */
            .connection-vertical {
                position: absolute;
                background-color: black;
                width: 2px;
                transform-origin: top center; /* Cambiar el origen de la transformación */
            }

            /* Estilos de la conexión horizontal */
            .connection-horizontal {
                position: absolute;
                background-color: black;
                height: 2px;
                transform-origin: center left; /* Cambiar el origen de la transformación */
            }

            /* Estilos para el título de la barra lateral */
            .titulo {
                background-color: #F8DA45;
                width: 100%;
                border-top-right-radius: 11px;
                border-top-left-radius: 11px;
                text-align: center;
                padding-top: 7px;
            }

            /* Estilos del contenedor de nodos de Marketing */
            .marketing-nodes-container {
                display: flex;
                align-items: center;
                gap: 10px;
            }

            /* Estilos del contenedor de nodos "Recursos" */
            .recursos-nodes-container {
                display: flex;
                align-items: center;
                gap: 10px;
            }


        </style>
    </ui:define>

    <ui:define name="title">Organigrama Jerarquico</ui:define>
    
    <ui:define name="viewname">
        <li>Gestión de Empresa</li>
        <li><i class="pi pi-chevron-right"></i></li>
        <li>
            <p:link outcome="/formGestorOrganizacional">Formulario de Organigrama Jerarquico</p:link>
        </li>
    </ui:define>

    <ui:define name="content">
        <div class="card">
            <div class="organigram-wrapper">
                <div class="organigram-sidebar">
                    <div class="titulo">
                        <h4>Formas</h4>
                    </div>
                    <div class="sidebar-item" draggable="true" ondragstart="dragStart(event);">
                        <div id="gerenciaGeneralNode" class="ui-organigram-node gerencia-general-node" draggable="true">
                            Gerencia General
                        </div>
                    </div>

                    <div class="sidebar-item" draggable="true" ondragstart="dragStart(event);">
                        <div id="administracionNode" class="ui-organigram-node administracion-node" draggable="true">
                            Administración
                        </div>
                    </div>

                    <div class="sidebar-item" draggable="true" ondragstart="dragStart(event);">
                        <div id="marketingNode" class="ui-organigram-node marketing-node" draggable="true">
                            Marketing
                        </div>
                    </div>

                    <div class="sidebar-item" draggable="true" ondragstart="dragStart(event);">
                        <div id="contabilidadNode" class="ui-organigram-node contabilidad-node" draggable="true">
                            Contabilidad
                        </div>
                    </div>

                    <div class="sidebar-item" draggable="true" ondragstart="dragStart(event);">
                        <div id="recursosNode" class="ui-organigram-node recursos-node" draggable="true">
                            Recursos
                        </div>
                    </div>

                </div>

                <div class="organigram-content" id="organigramContainer" ondrop="drop(event)" ondragover="allowDrop(event)">
                    <div id="gerenciaGeneralContainer" class="gerencia-general-node-container"></div>
                    <div id="administracionContainer" class="administracion-nodes-container"></div>
                    <!-- Contenedor de los nodos de Marketing -->
                    <div id="marketingContainer" class="marketing-nodes-container"></div>
                    <div id="contabilidadContainer" class="contabilidad-nodes-container"></div>
                    <div id="recursosContainer" class="recursos-nodes-container"></div>

                </div>
                <svg id="connectionsContainer" class="connections-container"></svg>
            </div>
        </div>

        <script>
            let gerenciaGeneralAdded = false;
            let administracionNodes = [];
            let marketingNodes = [];
            let contabilidadNodes = [];

            function allowDrop(event) {
                event.preventDefault();
            }

            function dragStart(event) {
                event.dataTransfer.setData("text/plain", event.target.id);
                event.dataTransfer.effectAllowed = "move";
            }

            function getNodePosition(node) {
                const container = document.getElementById("organigramContainer");
                const offsetX = node.offsetLeft - container.offsetLeft;
                const offsetY = node.offsetTop - container.offsetTop;
                return {x: offsetX, y: offsetY};
            }

            function drop(event) {
                event.preventDefault();
                const nodeId = event.dataTransfer.getData("text/plain");
                const draggedNode = document.getElementById(nodeId);
                const container = document.getElementById("organigramContainer");

                if (nodeId === "gerenciaGeneralNode") {
                    if (gerenciaGeneralAdded) {
                        return; // Si ya se agregó Gerencia General, no se pueden agregar más nodos
                    }
                    gerenciaGeneralAdded = true;

                    const newNode = draggedNode.cloneNode(true);
                    newNode.classList.add("added");

                    const offsetX = event.clientX - container.getBoundingClientRect().left - newNode.offsetWidth / 2;
                    const offsetY = event.clientY - container.getBoundingClientRect().top - newNode.offsetHeight / 2;

                    newNode.style.left = `${offsetX}px`;
                    newNode.style.top = `${offsetY}px`;

                    newNode.addEventListener("dragstart", dragStart);

                    const originalStyles = window.getComputedStyle(draggedNode);
                    Array.from(originalStyles).forEach((property) => {
                        newNode.style[property] = originalStyles[property];
                    });

                    const gerenciaGeneralContainer = document.getElementById("gerenciaGeneralContainer");
                    gerenciaGeneralContainer.appendChild(newNode);
                } else if (nodeId === "administracionNode") {
                    if (!gerenciaGeneralAdded) {
                        return; // No se puede agregar "Administración" sin "Gerencia General"
                    }

                    administracionNodes.push(draggedNode);
                    const administracionContainer = document.getElementById("administracionContainer");
                    administracionContainer.innerHTML = "";

                    for (const node of administracionNodes) {
                        const cloneNode = node.cloneNode(true);
                        cloneNode.classList.add("added");
                        administracionContainer.appendChild(cloneNode);
                    }

                    administracionContainer.classList.add("administracion-node-row");

                    const gerenciaGeneralContainer = document.getElementById("gerenciaGeneralContainer");
                    const gerenciaGeneralNode = gerenciaGeneralContainer.querySelector(".gerencia-general-node");
                    const positionGerenciaGeneral = getNodePosition(gerenciaGeneralNode);
                    const positionNewNode = getNodePosition(administracionNodes[0]);
                    const verticalStartX = positionGerenciaGeneral.x + gerenciaGeneralNode.offsetWidth / 2;
                    const verticalStartY = positionGerenciaGeneral.y + gerenciaGeneralNode.offsetHeight;
                    const verticalEndX = positionNewNode.x + administracionNodes[0].offsetWidth / 2;
                    const verticalEndY = positionNewNode.y;
                    createVerticalConnection(verticalStartX, verticalStartY, verticalEndX, verticalEndY);
                } else if (nodeId === "marketingNode") {
                    if (!administracionNodes.length) {
                        return; // No se puede agregar "Marketing" sin "Administración"
                    }

                    marketingNodes.push(draggedNode);
                    const marketingContainer = document.getElementById("marketingContainer");
                    marketingContainer.innerHTML = "";

                    for (const node of marketingNodes) {
                        const cloneNode = node.cloneNode(true);
                        cloneNode.classList.add("added");
                        marketingContainer.appendChild(cloneNode);
                    }

                    marketingContainer.classList.add("marketing-nodes-row");

                    const administracionContainer = document.getElementById("administracionContainer");
                    const administracionNode = administracionContainer.querySelector(".administracion-node");
                    const positionAdministracion = getNodePosition(administracionNode);
                    const positionNewNode = getNodePosition(marketingNodes[0]);
                    const horizontalStartX = positionAdministracion.x + administracionNode.offsetWidth;
                    const horizontalStartY = positionAdministracion.y + administracionNode.offsetHeight / 2;
                    const horizontalEndX = positionNewNode.x;
                    const horizontalEndY = positionNewNode.y + marketingNodes[0].offsetHeight / 2;
                    createHorizontalConnection(horizontalStartX, horizontalStartY, horizontalEndX, horizontalEndY);
                } else if (nodeId === "contabilidadNode") {
                    if (marketingNodes.length > 0) {
                        const newNode = draggedNode.cloneNode(true);
                        newNode.classList.add("added");

                        const contabilidadContainer = document.getElementById("contabilidadContainer");
                        contabilidadContainer.style.display = "flex"; // Agregar el estilo aquí

                        const lastContabilidadNode = contabilidadContainer.lastElementChild;

                        let offsetX, offsetY;

                        if (lastContabilidadNode) {
                            const lastContabilidadPosition = getNodePosition(lastContabilidadNode);
                            offsetX = lastContabilidadPosition.x + lastContabilidadNode.offsetWidth + 10; // Espaciado horizontal
                            offsetY = lastContabilidadPosition.y;
                        } else {
                            const lastMarketingNode = marketingNodes[marketingNodes.length - 1];
                            const lastMarketingPosition = getNodePosition(lastMarketingNode);
                            offsetX = lastMarketingPosition.x + lastMarketingNode.offsetWidth + 10; // Espaciado horizontal
                            offsetY = lastMarketingPosition.y;
                        }

                        newNode.style.left = `${offsetX}px`;
                        newNode.style.top = `${offsetY}px`;

                        newNode.addEventListener("dragstart", dragStart);
                        contabilidadContainer.appendChild(newNode);

                        const horizontalStartX = lastMarketingNode
                                ? getNodePosition(lastMarketingNode).x + lastMarketingNode.offsetWidth
                                : getNodePosition(marketingNodes[marketingNodes.length - 1]).x + marketingNodes[0].offsetWidth;
                        const horizontalStartY = offsetY + newNode.offsetHeight / 2;
                        const horizontalEndX = offsetX + newNode.offsetWidth + 10; // Ajuste aquí
                        const horizontalEndY = offsetY + newNode.offsetHeight / 2;
                        createHorizontalConnection(horizontalStartX, horizontalStartY, horizontalEndX, horizontalEndY);
                    } else {
                        console.log("Cannot add Contabilidad without Marketing.");
                    }
                } else if (nodeId === "recursosNode") {
                    if (!contabilidadNodes.length) {
                        console.log("Cannot add Recursos without Contabilidad.");
                        return; // No se puede agregar "Recursos" sin "Contabilidad"
                    }

                    const newNode = draggedNode.cloneNode(true);
                    newNode.classList.add("added");

                    const recursosContainer = document.getElementById("recursosContainer");
                    recursosContainer.appendChild(newNode);

                    const lastContabilidadNode = contabilidadNodes[contabilidadNodes.length - 1];
                    const positionLastContabilidad = getNodePosition(lastContabilidadNode);
                    const offsetX = positionLastContabilidad.x + lastContabilidadNode.offsetWidth + 10; // Espaciado horizontal
                    const offsetY = positionLastContabilidad.y;

                    newNode.style.left = `${offsetX}px`;
                    newNode.style.top = `${offsetY}px`;

                    newNode.addEventListener("dragstart", dragStart);

                    const horizontalStartX = positionLastContabilidad.x + lastContabilidadNode.offsetWidth;
                    const horizontalStartY = offsetY + newNode.offsetHeight / 2;
                    const horizontalEndX = offsetX;
                    const horizontalEndY = offsetY + newNode.offsetHeight / 2;
                    createHorizontalConnection(horizontalStartX, horizontalStartY, horizontalEndX, horizontalEndY);
                }
            }
            function createVerticalConnection(startX, startY, endX, endY) {
                const container = document.getElementById("connectionsContainer");

                const verticalLine = document.createElementNS("http://www.w3.org/2000/svg", "line");
                verticalLine.setAttribute("class", "connection-vertical");
                verticalLine.setAttribute("x1", startX);
                verticalLine.setAttribute("y1", startY);
                verticalLine.setAttribute("x2", endX);
                verticalLine.setAttribute("y2", endY);
                container.appendChild(verticalLine);
            }

            function createHorizontalConnection(startX, startY, endX, endY) {
                const container = document.getElementById("connectionsContainer");

                const connection = document.createElementNS("http://www.w3.org/2000/svg", "line");
                connection.setAttribute("class", "connection-horizontal");
                connection.setAttribute("x1", startX);
                connection.setAttribute("y1", startY);
                connection.setAttribute("x2", endX);
                connection.setAttribute("y2", endY);
                container.appendChild(connection);
            }
        </script>

    </ui:define>
</ui:composition>
